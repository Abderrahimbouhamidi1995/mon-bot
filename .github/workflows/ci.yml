name: CI/CD for Rasa Bot with Docker Compose

on:
  push:
    branches:
      - main

jobs:
  build_and_test:
    name: Build Image and Run Tests
    runs-on: ubuntu-latest
    continue-on-error: true   # Permet de capturer l'Ã©chec pour le job de rollback
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}
          persist-credentials: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image (Test Stage)
        run: docker build --target test -t my-bot:test .

      - name: Run tests in Docker container
        run: docker run --rm -e PAT_TOKEN=${{ secrets.PAT_TOKEN }} -v ${{ github.workspace }}:/app my-bot:test

  rollback:
    name: Rollback Last Commit if Tests Fail
    runs-on: ubuntu-latest
    needs: build_and_test
    if: ${{ needs.build_and_test.outcome != 'success' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}
          persist-credentials: true

      - name: Rollback last commit
        run: |
          if grep -Fq "Incorrect" tests/test_results.csv; then
            echo "Rolling back last commit..."
            git reset --hard HEAD~1
            git push origin HEAD --force
          else
            echo "No rollback needed.";
          fi

  deploy:
    name: Deploy Rasa Bot Container
    runs-on: ubuntu-latest
    needs: build_and_test
    if: ${{ needs.build_and_test.outcome == 'success' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}
          persist-credentials: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image (Production Stage)
        run: docker build --target prod -t my-bot:prod .

      - name: Deploy Docker container
        run: docker run -d --rm -p 5011:5005 my-bot:prod